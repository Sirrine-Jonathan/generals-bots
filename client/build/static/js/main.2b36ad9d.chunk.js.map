{"version":3,"sources":["components/Mosiac.js","components/PageHeader.js","components/PageContainer.js","components/Loading.js","components/BotCard.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Mosaic","children","StyledMosaic","styled","div","PageHeader","props","StyledPageHeader","PageContainer","StyledPageContainer","Loading","BotCard","bot","useState","gameID","setGameID","Card","Content","Header","style","display","username","Image","src","width","Meta","Date","last_updated","toLocaleString","Divider","Row","StyledButton","primary","fluid","onClick","dir","fetch","then","res","json","data","window","open","url","Icon","name","StyledInput","type","value","placeholder","onChange","e","target","Button","secondary","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Input","HomePage","listLoading","setListLoading","list","setList","useEffect","catch","error","href","rel","color","size","Container","as","undefined","length","map","idx","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b36ad9d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Mosaic = ({children}) => {\n  return (\n    <StyledMosaic>\n      {children}\n    </StyledMosaic>\n  )\n}\n\nexport default Mosaic;\n\nconst StyledMosaic = styled.div`\n\n`;","import styled from 'styled-components';\n\nconst PageHeader = ({children, ...props}) => {\n  return (\n    <StyledPageHeader {...props}>\n      {children}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader;\n\nconst StyledPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #2a2a3a;\n  padding: 20px;\n  & h1 {\n    color: white;\n    padding: 0;\n    margin: 0;\n  }\n`;","import styled from 'styled-components'\n\nconst PageContainer = ({children}) => {\n  return (\n    <StyledPageContainer>\n      {children}\n    </StyledPageContainer>\n  )\n}\n\nexport default PageContainer;\n\nconst StyledPageContainer = styled.div`\n\n`;","const Loading = () => <div>...Loading</div>\nexport default Loading;","import { useState } from 'react'\nimport { Card, Input, Button, Icon, Divider, Image } from 'semantic-ui-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styled from 'styled-components';\nconst BotCard = ({bot}) => {\n  const [gameID, setGameID] = useState(\"\");\n  const quickPlay = (dir) => {\n    fetch(`/quickplay/${dir}`)\n      .then((res) => res.json())\n      .then((data) => {\n        window.open(data.url, '_blank');\n      });\n  }\n  const invite = (dir) => {\n    fetch(`/invite/${dir}/${gameID}`)\n      .then((res) => res.json())\n      .then((data) => {\n        toast(`Playing on ${data.url}`);\n        //window.open(data.url, '_blank');\n      })\n  }\n  return (\n    <Card key={bot.username}>\n      <Card.Content>\n        <Card.Header style={{display: 'flex', 'justify-content': 'space-between'}}>\n          {bot.username}\n          <Image src=\"/robot.png\" style={{width: \"33px\", 'margin-top': \"-8px\"}} />\n        </Card.Header>\n        <Card.Meta>Updated {( new Date(bot.last_updated)).toLocaleString()}</Card.Meta>\n        <Divider />\n        <Row>\n          <StyledButton primary fluid onClick={() => quickPlay(bot.dir)}>\n            <Icon name=\"game\" />\n            <div>Quick Play</div>\n          </StyledButton>\n        </Row>\n        <Row>\n          <StyledInput type=\"text\" value={gameID} placeholder=\"Game ID\" onChange={(e) => {setGameID(e.target.value)}}/>\n          <Button secondary onClick={() => invite(bot.dir)}>Invite</Button>\n        </Row>\n      </Card.Content>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick={false}\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Card>\n  )\n}\n\nexport default BotCard;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  box-sizing: border-box;\n  flex: 1;\n  width: 100%;\n`;\n\nconst StyledInput = styled(Input)`\n  margin-right: 4px;\n`;\n\nconst StyledButton = styled(Button)`\n  display: flex !important;\n  flex-wrap: no-wrap !important;\n  flex-direction: row !important;\n  justify-content: center;\n  align-items: center;\n  & div {\n    padding-left: 5px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Header, Divider, Icon, Image } from 'semantic-ui-react';\nimport Mosaic from '../components/Mosiac';\nimport PageHeader from '../components/PageHeader';\nimport PageContainer from '../components/PageContainer';\nimport Loading from '../components/Loading';\nimport BotCard from '../components/BotCard';\nconst HomePage = () => {\n  const [listLoading, setListLoading] = useState(true);\n  const [list, setList] = useState(null);\n  const getBotCards = () => {\n    if (!list || list.length === undefined) return null;\n    return list.map((bot, idx) => (\n        <BotCard bot={bot} />\n      )\n    );\n  }\n  useEffect(() => {\n    fetch(\"/init\")\n      .then((res) => res.json())\n      .then((data) => {\n        setList(data);\n        setListLoading(false);\n      })\n      .catch(error => {\n        setListLoading(false)\n      })\n  }, []);\n  return (\n    <PageContainer>\n      <PageHeader>\n          <Row>\n            <h1>Generals Bots</h1>\n          </Row>\n          <a href=\"https://github.com/Sirrine-Jonathan/generals-bots.git\" target=\"_blank\" rel=\"noreferrer\">\n            <Icon name=\"github\" style={{color: \"#fff\"}} size=\"huge\" />\n          </a>\n      </PageHeader>\n      <Container>\n        <Header as=\"h2\" style={{\"paddingTop\": \"20px\"}}>\n          Explore Bots\n        </Header>\n        <Divider />\n        {(listLoading) ? <Loading />:(\n          <Mosaic>\n            {getBotCards()}\n          </Mosaic>\n        )}\n      </Container>\n    </PageContainer>\n  )\n}\nexport default HomePage;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;","import HomePage from './pages/HomePage'\nconst App = () => <HomePage />\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}